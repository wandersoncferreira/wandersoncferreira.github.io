<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wanderson Ferreira</title><link>https://wandersoncferreira.github.io/en/</link><description>Recent content on Wanderson Ferreira</description><generator>Hugo -- gohugo.io</generator><copyright>Wanderson Ferreira</copyright><lastBuildDate>Tue, 11 Jan 2022 00:00:00 -0300</lastBuildDate><atom:link href="https://wandersoncferreira.github.io/en/index.xml" rel="self" type="application/rss+xml"/><item><title>emacs - automation don't need to look pretty</title><link>https://wandersoncferreira.github.io/en/items/20220111222641-emacs_automation_don_t_need_to_look_pretty/</link><pubDate>Tue, 11 Jan 2022 00:00:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/en/items/20220111222641-emacs_automation_don_t_need_to_look_pretty/</guid><description>One of the great strengths of Emacs for me is that my configuration file is mine and I can do whatever I want to it. I understand the value of sharing ideas and contributing to other people issues and desires but there is an intrinsic anxiety associated with it.
You don&amp;rsquo;t want people thinking you are stupid or sloppy!
In this post I want to share the most used function I have in my current config file.</description></item><item><title>role of software</title><link>https://wandersoncferreira.github.io/en/items/20220104144350-role_of_software/</link><pubDate>Tue, 04 Jan 2022 00:00:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/en/items/20220104144350-role_of_software/</guid><description>Businesses have real challenging requirements and most of this difficulty is not directly tied up with the actual implementation of these requirements &amp;ndash; they are straightforward, however accounting for changes is the tricky part and often misunderstood.
We live in an ever changing environment, but the rate of change is high from either business or technology perspectives. I had the pleasure to work with smart business people and often felt their despair when they explained a new feature or a new pivoting in the product and the tech department went mad by thinking about how would they do that?</description></item><item><title>we dont know how to compute</title><link>https://wandersoncferreira.github.io/en/items/20220104151027-we_dont_know_how_to_compute/</link><pubDate>Tue, 04 Jan 2022 00:00:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/en/items/20220104151027-we_dont_know_how_to_compute/</guid><description>These are some thoughts after watching We Really Don&amp;rsquo;t Know How to Compute! from Gerald Sussman.
Sussman is intrigued by how bad we build our systems today, basically when a problem to be solved changes we need to change the software too. Ideally we would add more code to deal with new requirements but often even a small change in the problem domain will represent a huge amount of code that needs to be shifted around.</description></item><item><title>why clojure?</title><link>https://wandersoncferreira.github.io/en/items/why-clojure/</link><pubDate>Mon, 02 Aug 2021 14:29:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/en/items/why-clojure/</guid><description>&lt;p>For the past 5 years I have been asked this question from time to time and I
always gave a bad answer. Let&amp;rsquo;s try again and lets start with why can&amp;rsquo;t I answer
this question properly?&lt;/p></description></item></channel></rss>