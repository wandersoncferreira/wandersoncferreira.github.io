<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wanderson Ferreira</title><link>https://wandersoncferreira.github.io/</link><description>Recent content on Wanderson Ferreira</description><generator>Hugo -- gohugo.io</generator><copyright>Wanderson Ferreira</copyright><lastBuildDate>Tue, 24 May 2022 21:47:00 -0300</lastBuildDate><atom:link href="https://wandersoncferreira.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>how expert programmers think about errors</title><link>https://wandersoncferreira.github.io/notes/how_expert_programmers_think_about_errors/</link><pubDate>Tue, 24 May 2022 21:47:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/how_expert_programmers_think_about_errors/</guid><description>Link of the talk.
pay attention to what is hidden attending to contrary evidence seek falsification write comments about what is not in the code: intentions and assumptions understanding by breaking re-assessing the landscape and deliberately expanding the search space sometimes a high performance team avoids using methodologies playing methods against each other building errors into the code to verify the test suite etc the interplay between developers is crucial experts use disciplined practices that are socially embedded and reinforced contrasting multiple perspectives fixes the problem and not worries about the blame</description></item><item><title>value and waste in software engineering</title><link>https://wandersoncferreira.github.io/notes/value_and_waste_in_software_engineering/</link><pubDate>Tue, 24 May 2022 21:44:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/value_and_waste_in_software_engineering/</guid><description> what is waste?
bad code reviews building the wrong feature or product mismanaging the backlog rework unecessarily complex solutions extraneous cognitive load psychological distress knowledge loss waiting ineffective communication human values?
maintain honour + respect for users e.g. what user information is kept, how is it shared? facilitate different origins, languages, cultures, knowledge</description></item><item><title>todo entrypoint file</title><link>https://wandersoncferreira.github.io/bookmarks/todo_entrypoint_file/</link><pubDate>Sun, 22 May 2022 08:31:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/todo_entrypoint_file/</guid><description>This is a set of raw pages that I want to take at look before turning them into actual bookmarks or posts
dreyfus model of skill acquisition M-x Research videos GeePawHill Tweet on the State of Hiring Programmers are we really engineers? dopamine, smartphones &amp;amp; you: a battle for your time research as understanding distributed systems lecture notes - Dr. Martin Kleppmann Tonsky thread on things learned from other programming languages Python WSGI Michael Sugrue Lectures on philosophy stanford cs 253 web security when did computer science theory get so hard?</description></item><item><title>codebases as communication</title><link>https://wandersoncferreira.github.io/bookmarks/codebases_as_communication/</link><pubDate>Sun, 22 May 2022 08:30:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/codebases_as_communication/</guid><description>Computer Things Conventionally we communicate programming ideas with talks, papers, and blog posts. But we can also communicate ideas with entire codebases. If someone finds a security exploit, she&amp;rsquo;ll sometimes publish a proof of concept to prove the exploit isn&amp;rsquo;t just theoretical.
Now let&amp;rsquo;s say the exploit PoC comes with a ton of command-line flags: verbose mode, configuration options, output formats, the whole works. Now the writer is communicating something subtly different: not just that the exploit exists, but she wants you to experiment with it.</description></item><item><title>fundamentals</title><link>https://wandersoncferreira.github.io/notes/fundamentals/</link><pubDate>Sat, 21 May 2022 21:01:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/fundamentals/</guid><description>Bird must soar. Skunk must stink.
Cat must prowl. Man must think.
What sets man apart from beast is his engine of
thought. His mind. His
BRAIN
makes him unique
and gives his greatest pleasure.
But fundamental as is thought for human beings,
there is stuff more basic still that underlies and
DRIVES
not only man
but all great beasts,
And that is nature&amp;rsquo;s call to each of us&amp;hellip; to be special.</description></item><item><title>modularization</title><link>https://wandersoncferreira.github.io/notes/modularization/</link><pubDate>Tue, 17 May 2022 21:51:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/modularization/</guid><description> We have tried to demonstrate by these examples that it is almost always incorrect to begin the decomposition of a system into modules on the basis of a flowchart. We propose instead that one begins with a list of difficult design decisions or design decisions which are likely to change. Each module is then designed to hide such a decision from the others.
D.L. Parnas</description></item><item><title>intrapreneurship</title><link>https://wandersoncferreira.github.io/notes/intrapreneurship/</link><pubDate>Sun, 15 May 2022 08:13:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/intrapreneurship/</guid><description>A person within a large corporation who takes direct responsibility for turning an idea into a profitable finished product through assertive risk-taking and innovation.
dreamers who do. Those who take responsibility for creating an innovation of any kind within an organization.
Pinchot (1985)</description></item><item><title>public</title><link>https://wandersoncferreira.github.io/notes/public/</link><pubDate>Sun, 15 May 2022 08:13:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/public/</guid><description>I once learned that Kant is extremely precise with the words he chooses to express any thought. Therefore, everytime I read any Kant essay I need to be extra diligent with words that I take for granted. This one caught me by surprise because all of sudden the essay stopped making sense to me. What does he meant with &amp;ldquo;public?&amp;rdquo;
Let&amp;rsquo;s find out! The internet for the rescue. Luckily we have a lot of literature about everything nowdays.</description></item><item><title>research as understanding</title><link>https://wandersoncferreira.github.io/bookmarks/research_as_understanding/</link><pubDate>Sun, 15 May 2022 08:12:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/research_as_understanding/</guid><description>October 17, 2021
I misunderstood the nature of research for most of my life, and this prevented me from doing any. I thought significant research came from following the scientific method until novel discoveries popped out. I&amp;rsquo;d never contributed something new to human knowledge before, so being a researcher&amp;mdash;which required replicating this outcome&amp;mdash;felt impossibly far out of reach.
But it turns out the novel discovery is just a side effect. You don&amp;rsquo;t make novel discoveries by trying to make novel discoveries.</description></item><item><title>the other kind of staff software engineer</title><link>https://wandersoncferreira.github.io/bookmarks/the_other_kind_of_staff_software_engineer/</link><pubDate>Sun, 15 May 2022 08:12:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/the_other_kind_of_staff_software_engineer/</guid><description>/ 11 minute read / Updated: May 12, 2022
Adam Gordon Bell
A Simplified World Imagine a simplified world where there is only enterprise software and only two broad types of software jobs.
( What is enterprise software? It&amp;rsquo;s large, bland software for large corporations. My story will also apply to other areas but bear with me here. )
Ok, so only enterprise software exists, and so you can work at two types of companies.</description></item><item><title>the perfect place I'd shine?</title><link>https://wandersoncferreira.github.io/notes/the_perfect_place_i_d_shine/</link><pubDate>Sun, 15 May 2022 08:12:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/the_perfect_place_i_d_shine/</guid><description/></item><item><title>thought-leaders</title><link>https://wandersoncferreira.github.io/notes/thought_leaders/</link><pubDate>Sun, 15 May 2022 08:11:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/thought_leaders/</guid><description>definition: someone has a single solution that seems to fit every problem.
In this post, Adam Gordon Bell discuss the advices given by thought-leaders. In his research he found the work of Philip E. Tetlock on the decision-making process of experts. Tetlock was able to split the group of experts in his research broadly in two groups: the hedgehogs and foxes.
hedgehog has one big idea like &amp;ldquo;free-market capitalism&amp;rdquo; which they use as a lens to look at many issues they are &amp;ldquo;confident forecasters&amp;rdquo; foxes they have complicated advice and were skeptical of even their own predictions less likely to be famous because their advices are harder to explain in a sound bite When all predictions were added up and scores, hedgehogs lost out to foxes.</description></item><item><title>understanding</title><link>https://wandersoncferreira.github.io/notes/understanding/</link><pubDate>Sun, 15 May 2022 08:11:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/understanding/</guid><description/></item><item><title>what to learn?</title><link>https://wandersoncferreira.github.io/bookmarks/what_to_learn/</link><pubDate>Sun, 15 May 2022 08:10:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/what_to_learn/</guid><description>It&amp;rsquo;s common to see people advocate for learning skills that they have or using processes that they use. For example, Steve Yegge has a set of blog posts where he recommends reading compiler books and learning about compilers. His reasoning is basically that, if you understand compilers, you&amp;rsquo;ll see compiler problems everywhere and will recognize all of the cases where people are solving a compiler problem without using compiler knowledge. Instead of hacking together some half-baked solution that will never work, you can apply a bit of computer science knowledge to solve the problem in a better way with less effort.</description></item><item><title>what's enlightenment?</title><link>https://wandersoncferreira.github.io/bookmarks/what_s_enlightenment/</link><pubDate>Sun, 15 May 2022 08:10:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/what_s_enlightenment/</guid><description>Published at [Columbia Edu](http://www.columbia.edu/acis/ets/CCREAD/etscc/kant.html) Immanuel Kant Enlightenment is man&amp;rsquo;s emergence from his self-imposed nonage. Nonage is the inability to use one&amp;rsquo;s own understanding without another&amp;rsquo;s guidance. This nonage is self-imposed if its cause lies not in lack of understanding but in indecision and lack of courage to use one&amp;rsquo;s own mind without another&amp;rsquo;s guidance. Dare to know! (Sapere aude.) &amp;ldquo;Have the courage to use your own understanding,&amp;rdquo; is therefore the motto of the enlightenment.</description></item><item><title>how can I achieve programming mastery?</title><link>https://wandersoncferreira.github.io/notes/how_can_i_achieve_programming_mastery/</link><pubDate>Wed, 11 May 2022 08:36:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/how_can_i_achieve_programming_mastery/</guid><description>Rich Hickey once said: Mastery comes from a combination of at least several of the following:
Knowledge Focus Relentless considered practice over a long period of time Detected, recovered-from failures Mentorship by an expert Always working slightly beyond your comfort/ability zone, pushing it ever forward What skills then are so universally useful and transportable in software development? Two are:
ability to acquire knowledge ability to solve problems Rich seems to believe that one can get better at acquiring knowledge and solving problems by acquiring ever deeper knowledge and solving ever harder problems.</description></item><item><title>ability to acquire knowledge</title><link>https://wandersoncferreira.github.io/notes/ability_to_acquire_knowledge/</link><pubDate>Wed, 11 May 2022 08:34:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/ability_to_acquire_knowledge/</guid><description/></item><item><title>ability to solve problems</title><link>https://wandersoncferreira.github.io/notes/ability_to_solve_problems/</link><pubDate>Wed, 11 May 2022 08:34:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/ability_to_solve_problems/</guid><description/></item><item><title>nemawashi</title><link>https://wandersoncferreira.github.io/notes/nemawashi/</link><pubDate>Wed, 11 May 2022 06:55:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/nemawashi/</guid><description>Nemawashi (根回し) in Japanese means an informal process of quietly laying the foundation for some proposed change or project, by talking to the people concerned, gathering support and feedback, and so forth. It is considered an important element in any major change, before any formal steps are taken, and successful nemawashi enables changes to be carried out with the consent of all sides.
Nemawashi literally translates as &amp;ldquo;turning the roots&amp;rdquo;, from ne (根, &amp;ldquo;root&amp;rdquo;) and mawasu (回す, &amp;ldquo;to turn something, to put something around something else&amp;rdquo;).</description></item><item><title>quotes</title><link>https://wandersoncferreira.github.io/notes/quotes/</link><pubDate>Wed, 11 May 2022 06:52:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/quotes/</guid><description>Nice quotes:
a speaker should try to give his audience something they can take home
Gian Carlo You have to keep a dozen of your favorite problems constantly present in your mind, although by and large they will lay in a dormant state. Every time you hear or read a new trick or a new result, test it against each of your twelve problems to see whether it helps.</description></item><item><title>conviction</title><link>https://wandersoncferreira.github.io/notes/conviction/</link><pubDate>Tue, 10 May 2022 08:43:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/conviction/</guid><description>The confidence that your idea is good enough that it&amp;rsquo;s worth throwing a lot of effort behind.</description></item><item><title>amplify my strenghts</title><link>https://wandersoncferreira.github.io/notes/amplify_my_strenghts/</link><pubDate>Mon, 09 May 2022 08:43:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/amplify_my_strenghts/</guid><description>The idea to amplify where you have a good advantage seems interesting but how to pin point our strengths? I&amp;rsquo;ve been battling with this idea for quite some time now, my lastest career movement was solely driven by this quest.
In a recent interview process, I had a personality assessment stage where I discussed with the Head of People all my previous work experiences. In the end he said I&amp;rsquo;m an intrapreneur and I kind agree with that.</description></item><item><title>innovation</title><link>https://wandersoncferreira.github.io/notes/innovation/</link><pubDate>Mon, 09 May 2022 08:14:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/innovation/</guid><description>&amp;lt;empty&amp;gt;</description></item><item><title>time</title><link>https://wandersoncferreira.github.io/notes/time/</link><pubDate>Mon, 09 May 2022 08:14:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/time/</guid><description>&amp;lt;empty&amp;gt;</description></item><item><title>guidance</title><link>https://wandersoncferreira.github.io/notes/guidance/</link><pubDate>Fri, 06 May 2022 17:58:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/notes/guidance/</guid><description>Questions while reading Kant&amp;rsquo;s what&amp;rsquo;s enlightenment? essay:
what level of guidance is desirable? at some point we need to draw the line between good vs bad guidance. I believe we all need people to provide us directions.</description></item><item><title>abstraction: not what you think it is</title><link>https://wandersoncferreira.github.io/bookmarks/abstraction_not_what_you_think_it_is/</link><pubDate>Fri, 06 May 2022 13:36:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/abstraction_not_what_you_think_it_is/</guid><description>March 28, 2022
“Interfaces are abstractions”
&amp;mdash; Olaf Thielke, the &amp;ldquo;Code Coach&amp;rdquo;
“Interfaces are not abstractions”
Mark Seeman, author of Code that Fits in Your Head and Dependency Injection
“Abstraction in programming is the process of identifying common patterns that have systematic variations; an abstraction represents the common pattern and provides a means for specifying which variation to use”
&amp;mdash; [[https://www.dreamsongs.com/Files/PatternsOfSoftware.pdf][Richard
Gabrie]]l, author of “The Rise of Worse is Better” and _Patterns of Software_</description></item><item><title>five things you notice when you quit the news</title><link>https://wandersoncferreira.github.io/bookmarks/five_things_you_notice_when_you_quit_the_news/</link><pubDate>Fri, 06 May 2022 13:33:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/five_things_you_notice_when_you_quit_the_news/</guid><description>//Email
34K Shares
{ comments closed }
I grew up believing that following the news makes you a better citizen. Eight years after having quit, that idea now seems ridiculous&amp;mdash;that consuming a particularly unimaginative information product on a daily basis somehow makes you thoughtful and informed in a way that benefits society.
But I still encounter people who balk at the possibility of a smart, engaged adult quitting the daily news.</description></item></channel></rss>