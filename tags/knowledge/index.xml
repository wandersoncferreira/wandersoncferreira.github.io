<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>knowledge on Wanderson Ferreira</title><link>https://wandersoncferreira.github.io/tags/knowledge/</link><description>Recent content in knowledge on Wanderson Ferreira</description><generator>Hugo -- gohugo.io</generator><copyright>Wanderson Ferreira</copyright><lastBuildDate>Sun, 15 May 2022 08:12:00 -0300</lastBuildDate><atom:link href="https://wandersoncferreira.github.io/tags/knowledge/index.xml" rel="self" type="application/rss+xml"/><item><title>research as understanding</title><link>https://wandersoncferreira.github.io/bookmarks/research_as_understanding/</link><pubDate>Sun, 15 May 2022 08:12:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/research_as_understanding/</guid><description>October 17, 2021
I misunderstood the nature of research for most of my life, and this prevented me from doing any. I thought significant research came from following the scientific method until novel discoveries popped out. I&amp;rsquo;d never contributed something new to human knowledge before, so being a researcher&amp;mdash;which required replicating this outcome&amp;mdash;felt impossibly far out of reach.
But it turns out the novel discovery is just a side effect. You don&amp;rsquo;t make novel discoveries by trying to make novel discoveries.</description></item><item><title>what to learn?</title><link>https://wandersoncferreira.github.io/bookmarks/what_to_learn/</link><pubDate>Sun, 15 May 2022 08:10:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/what_to_learn/</guid><description>It&amp;rsquo;s common to see people advocate for learning skills that they have or using processes that they use. For example, Steve Yegge has a set of blog posts where he recommends reading compiler books and learning about compilers. His reasoning is basically that, if you understand compilers, you&amp;rsquo;ll see compiler problems everywhere and will recognize all of the cases where people are solving a compiler problem without using compiler knowledge. Instead of hacking together some half-baked solution that will never work, you can apply a bit of computer science knowledge to solve the problem in a better way with less effort.</description></item></channel></rss>