<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>complexity on Bartuka</title>
    <link>https://wandersoncferreira.github.io/tags/complexity/</link>
    <description>Recent content in complexity on Bartuka</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 May 2020 00:00:00 -0300</lastBuildDate>
    
	<atom:link href="https://wandersoncferreira.github.io/tags/complexity/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>States and Nomads: Handling Software Complexity</title>
      <link>https://wandersoncferreira.github.io/notes/states-and-nomads/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 -0300</pubDate>
      
      <guid>https://wandersoncferreira.github.io/notes/states-and-nomads/</guid>
      <description>&lt;h3 id=&#34;youtubehttpsyoutubekgafci2unri&#34;&gt;&lt;a href=&#34;https://youtu.be/KGaFcI2UNrI&#34;&gt;Youtube&lt;/a&gt;&lt;/h3&gt;
&lt;h2 id=&#34;speaker&#34;&gt;Speaker&lt;/h2&gt;
&lt;p&gt;Zach Tellman&lt;/p&gt;
&lt;h2 id=&#34;thoughts&#34;&gt;Thoughts&lt;/h2&gt;
&lt;p&gt;Zach always provides a lot of references about amazing subjects, this
guy has a very scientific approach to software development and this is
great. I really believe we should take this road altogether.&lt;/p&gt;
&lt;p&gt;The choices you take when you build software depends on our knowledge
about the domain.&lt;/p&gt;
&lt;h2 id=&#34;quotes&#34;&gt;Quotes&lt;/h2&gt;
&lt;p&gt;We build systems that we can&amp;rsquo;t understand fully&lt;/p&gt;
&lt;p&gt;Heuristic devices don&amp;rsquo;t tell you when to stop. No abstraction
describes its own failures.&lt;/p&gt;
&lt;p&gt;The map is not the territory&lt;/p&gt;
&lt;p&gt;The Design Patterns book provides you the &amp;ldquo;blocks&amp;rdquo; about how you can
use to build solutions, however they do not talk about the environment
where your code is placed.&lt;/p&gt;
&lt;h2 id=&#34;recommendations&#34;&gt;Recommendations&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Read from other areas about similar problems we face in software engineer&lt;/li&gt;
&lt;li&gt;Good planning is good planning&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;books&#34;&gt;Books&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;An introduction to General Systems Thinking - by Gerald. M. Weinberg&lt;/li&gt;
&lt;li&gt;A thousand plateaus&lt;/li&gt;
&lt;li&gt;Ficcoes - by Jorge Luis Borges&lt;/li&gt;
&lt;li&gt;A Pattern Language - by Christopher Alexander&lt;/li&gt;
&lt;li&gt;Patterns of Software - by Richard Gabriel&lt;/li&gt;
&lt;li&gt;Invisible Cities - by Calvino&lt;/li&gt;
&lt;li&gt;Data and Reality - by Kent&lt;/li&gt;
&lt;/ol&gt;
</description> 
    </item>
    
  </channel>
</rss>
