<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>distributed on Bartuka</title>
    <link>https://wandersoncferreira.github.io/tags/distributed/</link>
    <description>Recent content in distributed on Bartuka</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 Jun 2020 00:00:00 -0300</lastBuildDate>
    
	<atom:link href="https://wandersoncferreira.github.io/tags/distributed/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Transactions: myths, surprises, and opportunities</title>
      <link>https://wandersoncferreira.github.io/notes/transactions-myths-surprises-and-opportunities/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 -0300</pubDate>
      
      <guid>https://wandersoncferreira.github.io/notes/transactions-myths-surprises-and-opportunities/</guid>
      <description>&lt;h3 id=&#34;youtubehttpsyoutube5zjhntm8xu8&#34;&gt;&lt;a href=&#34;https://youtu.be/5ZjhNTM8XU8&#34;&gt;Youtube&lt;/a&gt;&lt;/h3&gt;
&lt;h2 id=&#34;speaker&#34;&gt;Speaker&lt;/h2&gt;
&lt;p&gt;Martin Kleppmann&lt;/p&gt;
&lt;h2 id=&#34;thoughts&#34;&gt;Thoughts&lt;/h2&gt;
&lt;p&gt;This was the first talk from Martin that I saw, he is very thoughtful
and explains complex ideas somehow easily. I think because of Datomic
I got more interest in databases, I did the Day of Datomic course in
person at Cognitect and it was very nice to meet so many people
interested in databases.&lt;/p&gt;
&lt;p&gt;Looks like the software engineers in general does not like this
subject very much, however seems like the job of building and dealing
with &amp;ldquo;information systems&amp;rdquo; will require you to know more and more
about these tools.&lt;/p&gt;
&lt;p&gt;I will keep watching materials from Martin now. Luckily, I already had
his book. Looking forward to read it.&lt;/p&gt;
&lt;h2 id=&#34;quotes&#34;&gt;Quotes&lt;/h2&gt;
&lt;p&gt;Durability:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;archive tape&lt;/li&gt;
&lt;li&gt;fysnc to disk&lt;/li&gt;
&lt;li&gt;replication&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Consistency:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Not related to C in CAP theorem&lt;/li&gt;
&lt;li&gt;&amp;ldquo;tossed in to make the acronym work&amp;rdquo; (? lol)&lt;/li&gt;
&lt;li&gt;property of how the application use the database not the database itself&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Atomicity:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;not about concurrency!&lt;/li&gt;
&lt;li&gt;handling faults (crashes)&lt;/li&gt;
&lt;li&gt;transactions = (multi-object) atomicity, rollback writes on abort&lt;/li&gt;
&lt;li&gt;Abortability is better name rather than Atomicity&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Isolation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serializable?&lt;/li&gt;
&lt;li&gt;Read committed. You read only after the operation has been committed.&lt;/li&gt;
&lt;li&gt;Snapshot isolation. Try to prevent read skew&lt;/li&gt;
&lt;li&gt;Repeatable read. Try to prevent read skew&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;recommendations&#34;&gt;Recommendations&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create transaction boundaries in your applications.&lt;/li&gt;
&lt;li&gt;Avoid transactions across services&lt;/li&gt;
&lt;li&gt;Learn the isolation levels defaults of your database and the implications&lt;/li&gt;
&lt;/ol&gt;
</description> 
    </item>
    
  </channel>
</rss>
