<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bookmarks on Wanderson Ferreira</title><link>https://wandersoncferreira.github.io/bookmarks/</link><description>Recent content in Bookmarks on Wanderson Ferreira</description><generator>Hugo -- gohugo.io</generator><copyright>Wanderson Ferreira</copyright><lastBuildDate>Sun, 22 May 2022 08:31:00 -0300</lastBuildDate><atom:link href="https://wandersoncferreira.github.io/bookmarks/index.xml" rel="self" type="application/rss+xml"/><item><title>todo entrypoint file</title><link>https://wandersoncferreira.github.io/bookmarks/todo_entrypoint_file/</link><pubDate>Sun, 22 May 2022 08:31:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/todo_entrypoint_file/</guid><description>This is a set of raw pages that I want to take at look before turning them into actual bookmarks or posts
dreyfus model of skill acquisition M-x Research videos GeePawHill Tweet on the State of Hiring Programmers are we really engineers? dopamine, smartphones &amp;amp; you: a battle for your time research as understanding distributed systems lecture notes - Dr. Martin Kleppmann Tonsky thread on things learned from other programming languages Python WSGI Michael Sugrue Lectures on philosophy stanford cs 253 web security when did computer science theory get so hard?</description></item><item><title>codebases as communication</title><link>https://wandersoncferreira.github.io/bookmarks/codebases_as_communication/</link><pubDate>Sun, 22 May 2022 08:30:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/codebases_as_communication/</guid><description>Computer Things Conventionally we communicate programming ideas with talks, papers, and blog posts. But we can also communicate ideas with entire codebases. If someone finds a security exploit, she&amp;rsquo;ll sometimes publish a proof of concept to prove the exploit isn&amp;rsquo;t just theoretical.
Now let&amp;rsquo;s say the exploit PoC comes with a ton of command-line flags: verbose mode, configuration options, output formats, the whole works. Now the writer is communicating something subtly different: not just that the exploit exists, but she wants you to experiment with it.</description></item><item><title>research as understanding</title><link>https://wandersoncferreira.github.io/bookmarks/research_as_understanding/</link><pubDate>Sun, 15 May 2022 08:12:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/research_as_understanding/</guid><description>October 17, 2021
I misunderstood the nature of research for most of my life, and this prevented me from doing any. I thought significant research came from following the scientific method until novel discoveries popped out. I&amp;rsquo;d never contributed something new to human knowledge before, so being a researcher&amp;mdash;which required replicating this outcome&amp;mdash;felt impossibly far out of reach.
But it turns out the novel discovery is just a side effect. You don&amp;rsquo;t make novel discoveries by trying to make novel discoveries.</description></item><item><title>the other kind of staff software engineer</title><link>https://wandersoncferreira.github.io/bookmarks/the_other_kind_of_staff_software_engineer/</link><pubDate>Sun, 15 May 2022 08:12:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/the_other_kind_of_staff_software_engineer/</guid><description>/ 11 minute read / Updated: May 12, 2022
Adam Gordon Bell
A Simplified World Imagine a simplified world where there is only enterprise software and only two broad types of software jobs.
( What is enterprise software? It&amp;rsquo;s large, bland software for large corporations. My story will also apply to other areas but bear with me here. )
Ok, so only enterprise software exists, and so you can work at two types of companies.</description></item><item><title>what to learn?</title><link>https://wandersoncferreira.github.io/bookmarks/what_to_learn/</link><pubDate>Sun, 15 May 2022 08:10:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/what_to_learn/</guid><description>It&amp;rsquo;s common to see people advocate for learning skills that they have or using processes that they use. For example, Steve Yegge has a set of blog posts where he recommends reading compiler books and learning about compilers. His reasoning is basically that, if you understand compilers, you&amp;rsquo;ll see compiler problems everywhere and will recognize all of the cases where people are solving a compiler problem without using compiler knowledge. Instead of hacking together some half-baked solution that will never work, you can apply a bit of computer science knowledge to solve the problem in a better way with less effort.</description></item><item><title>what's enlightenment?</title><link>https://wandersoncferreira.github.io/bookmarks/what_s_enlightenment/</link><pubDate>Sun, 15 May 2022 08:10:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/what_s_enlightenment/</guid><description>Published at [Columbia Edu](http://www.columbia.edu/acis/ets/CCREAD/etscc/kant.html) Immanuel Kant Enlightenment is man&amp;rsquo;s emergence from his self-imposed nonage. Nonage is the inability to use one&amp;rsquo;s own understanding without another&amp;rsquo;s guidance. This nonage is self-imposed if its cause lies not in lack of understanding but in indecision and lack of courage to use one&amp;rsquo;s own mind without another&amp;rsquo;s guidance. Dare to know! (Sapere aude.) &amp;ldquo;Have the courage to use your own understanding,&amp;rdquo; is therefore the motto of the enlightenment.</description></item><item><title>abstraction: not what you think it is</title><link>https://wandersoncferreira.github.io/bookmarks/abstraction_not_what_you_think_it_is/</link><pubDate>Fri, 06 May 2022 13:36:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/abstraction_not_what_you_think_it_is/</guid><description>March 28, 2022
“Interfaces are abstractions”
&amp;mdash; Olaf Thielke, the &amp;ldquo;Code Coach&amp;rdquo;
“Interfaces are not abstractions”
Mark Seeman, author of Code that Fits in Your Head and Dependency Injection
“Abstraction in programming is the process of identifying common patterns that have systematic variations; an abstraction represents the common pattern and provides a means for specifying which variation to use”
&amp;mdash; [[https://www.dreamsongs.com/Files/PatternsOfSoftware.pdf][Richard
Gabrie]]l, author of “The Rise of Worse is Better” and _Patterns of Software_</description></item><item><title>five things you notice when you quit the news</title><link>https://wandersoncferreira.github.io/bookmarks/five_things_you_notice_when_you_quit_the_news/</link><pubDate>Fri, 06 May 2022 13:33:00 -0300</pubDate><guid>https://wandersoncferreira.github.io/bookmarks/five_things_you_notice_when_you_quit_the_news/</guid><description>//Email
34K Shares
{ comments closed }
I grew up believing that following the news makes you a better citizen. Eight years after having quit, that idea now seems ridiculous&amp;mdash;that consuming a particularly unimaginative information product on a daily basis somehow makes you thoughtful and informed in a way that benefits society.
But I still encounter people who balk at the possibility of a smart, engaged adult quitting the daily news.</description></item></channel></rss>